syntax = "proto3";
package autograd;

service Engine {
  rpc CreateVariable(CreateVariableReq) returns (Handle);
  rpc BinaryOp(BinaryOpReq) returns (Handle);
  rpc UnaryOp(UnaryOpReq) returns (Handle);
  rpc Backward(BackwardReq) returns (Empty);
  rpc GetScalar(GetScalarReq) returns (GetScalarResp);
}

message Handle { uint64 id = 1; }
message Empty {}

message CreateVariableReq { double value = 1; bool requires_grad = 2; }

enum BinaryKind { ADD = 0; MUL = 1; POW = 2; }
enum UnaryKind  { SIN = 0; NEG = 1; }

message BinaryOpReq { BinaryKind kind = 1; Handle a = 2; Handle b = 3; }
message UnaryOpReq  { UnaryKind  kind = 1; Handle x = 2; }

message BackwardReq { Handle out = 1; double seed = 2; }

message GetScalarReq {
  enum Field { VALUE = 0; GRAD = 1; }
  Handle h = 1;
  Field field = 2;
}
message GetScalarResp { double data = 1; }